apiVersion: v1
kind: Secret
metadata:
 name: acr-secret
type: Opaque
data: 
 docker-server: cHNkZW1vYWNyYW5nZWxvLmF6dXJlY3IuaW8=
 docker-username: cHNkZW1vYWNyYW5nZWxv
 docker-password: VTBvNk5rdit2Yzd3ZUVLUk55bXJ4Mjg2ZjZEc3VZWlFUZy93TG04Q3R2K0FDUkNrbGtTSg==
---
apiVersion: v1
kind: Secret
metadata:
 name: postgresql-params
type: Opaque
data:
 jdbc_url: amRiYzpwb3N0Z3Jlc3FsOi8vZnBiZXBncWwucG9zdGdyZXMuZGF0YWJhc2UuYXp1cmUuY29tOjU0MzIvY3N0 
 host: ZnBiZXBncWwucG9zdGdyZXMuZGF0YWJhc2UuYXp1cmUuY29t
 port: NTQzMg==
 username: QW5nZWxv
 password: QmVsbGE1MTQh
 database: Y3N0
---
apiVersion: v1
kind: Secret
metadata:
 name: mongo-params
type: Opaque
data:
 url: bW9uZ29kYjovL2RvY2RiZnA6T2xzNXlFNUdxdm4waWt5emNSa2NjQWE4SEM3Z3E4QVNObTMyOXNkcHVhSktFbDE1cnV1eFYyNmZqNEgzQlZhbGM0VGZPeE83V3pTR0FDRGJ0QnUxaUE9PUBkb2NkYmZwLm1vbmdvLmNvc21vcy5henVyZS5jb206MTAyNTUvP3NzbD10cnVlJnJlcGxpY2FTZXQ9Z2xvYmFsZGImcmV0cnl3cml0ZXM9ZmFsc2UmbWF4SWRsZVRpbWVNUz0xMjAwMDAmYXBwTmFtZT1AZG9jZGJmcEA=

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: webapp-deployment
 labels:
  app: webapp
spec:
 replicas: 1
 selector:
  matchLabels:
   app: webapp
 template:
  metadata:
    labels:
      app: webapp
  spec:
    containers:
    - name: frontend
      image: psdemoacrangelo.azurecr.io/fpfe:latest
      ports:
      - containerPort: 80
        protocol: TCP
        name: http

    - name: course-api
      image: psdemoacrangelo.azurecr.io/courseapi:latest
      env:
      - name: MG_URL
        valueFrom:
          secretKeyRef:
            name: mongo-params
            key: url
      ports:
      - containerPort: 8081

    - name: user-api
      image: psdemoacrangelo.azurecr.io/fpbe:latest
      env:
      - name: URL
        valueFrom:
         secretKeyRef:
          name: postgresql-params
          key: jdbc_url
      - name: USERNAME
        valueFrom:
         secretKeyRef:
          name: postgresql-params
          key: username
      - name: PSWD
        valueFrom:
         secretKeyRef:
          name: postgresql-params
          key: password
      ports:
      - containerPort: 8080
    - name: micro-services-pg2mongo
      image: psdemoacrangelo.azurecr.io/micro-services-pg2mong:latest
      env:
      - name: MG_URL
        valueFrom:
          secretKeyRef:
            name: mongo-params
            key: url
      - name: PGQL_HOST
        valueFrom:
          secretKeyRef:
            name: postgresql-params
            key: host
      - name: PGQL_PORT
        valueFrom:
          secretKeyRef:
            name: postgresql-params
            key: port
      - name: PGQL_USERNAME
        valueFrom:
          secretKeyRef:
            name: postgresql-params
            key: username
      - name: PGQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgresql-params
            key: password
      - name: PGQL_DATABASE
        valueFrom:
          secretKeyRef:
            name: postgresql-params
            key: database
      
    imagePullSecrets:
    - name: acr-secret
---
apiVersion: v1
kind: Service
metadata:
 name: webapp-service
 #annotations:
 # service.beta.kubernetes.io/azure-load-balancer-ipv4: 20.33.12.51
 labels:
   app: webapp
   
spec:
 #type: LoadBalancer
 #loadBalancerIP: 20.121.73.181
 selector:
   app: webapp
 ports:
   - name: http
     protocol: TCP
     port: 80
     targetPort: 80
   - name: api-v1
     protocol: TCP
     port: 8080
     targetPort: 8080
   - name: api-v2
     protocol: TCP
     port: 8081
     targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  #ingressClassName: azure-application-gateway
  rules:
   - host: ofcourse.website
     http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webapp-service
            port:
              number: 80
      - path: /api/v1/*
        pathType: Prefix
        backend:
          service:
            name: webapp-service
            port: 
              number: 8080
      - path: /api/v2/*
        pathType: Prefix
        backend:
          service:
            name: webapp-service
            port: 
              number: 8081
